name: Java CI with Gradle

on:
  push:
    branches: [ "make_gitAction" ]
  # pull_request:
  #   branches: [ "make_gitAction" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build with Gradle
      run: ./gradlew bootJar -x test

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: greenworld_user_service
        DATE_TIME: $(date "+%Y%m%d")
        IMAGE_TAG: latest
      run: |
        docker buildx build --platform=linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REPOSITORY:$DATE_TIME
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$DATE_TIME
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    # - name: Build the Docker image test
    #   run: docker build . --file dockerfile --tag greenworld_user_service:latest

    # - name: add tag docker image
    #   run: docker tag greenworld_user_service:latest greenworld_user_service:$(date +%s)

    # - name: add tag docker image
    #   run: docker tag greenworld_user_service:latest 846426794755.dkr.ecr.ap-northeast-2.amazonaws.com/greenworld:latest

    # - name: push docker image to ecr
    #   # run: docker push 846426794755.dkr.ecr.ap-northeast-2.amazonaws.com/greenworld:latest
    #   run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
